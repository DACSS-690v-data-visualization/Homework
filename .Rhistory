credit_colors = c('Very Low' = '#edf8fb',
'Low' = '#b2e2e2',
'Moderate' = '#66c2a4',
'High' = '#2ca25f',
'Very High' = '#006d2c')
#categorize contribution amounts
boston_merged_data = boston_merged_data %>%
mutate(check_cat = cut(Check,
breaks = c(-Inf, 30000, 60000, 90000, 120000, Inf),
labels = c('Very Low (<30,000)', 'Low (30,000-59,999)', 'Moderate (60,000-89,999)', 'High (90,000-119,999)', 'Very High(>=120,000)', 'NA'),
right = FALSE),
credit_cat = cut(`Credit Card`,
breaks = c(-Inf, 40000, 70000, 100000, 130000, Inf),
labels = c('Very Low (<40,000)', 'Low(40,000-69,999)', 'Moderate(70,000-99,999)', 'High (100,000-129,999)', 'Very High (>=130,000', 'NA'),
right = FALSE)
)
rm(list = ls()) # Remove all objects from memory
#Step 2: load and retrieve data
#load libraries
library(sf)
library(dplyr)
library(tidyr)
library(ggplot2)
#load contribution data
linkBoston = "https://github.com/DACSS-Visual/SpatialData/raw/refs/heads/main/data/BostonContrib.xlsx"
bostonCont = rio::import(linkBoston)
head(bostonCont) #view first few rows
summary(bostonCont$Amount) #inspect summary of Amount variable
tapply(bostonCont$Amount, bostonCont$'Tender Type Description', summary) #inspect Tender Type Description variable
#load zip code data
linkZips = 'https://raw.githubusercontent.com/DACSS-Visual/SpatialData/refs/heads/main/data/zip_codes.json'
bostonZips = sf::read_sf(linkZips)
head(bostonZips) #view first few rows
#Step 3: filter and merge data
selected_tender = c("Check", "Credit Card") #filter contributions by Check and Credit Card
bostonCont_filtered = bostonCont %>%
filter(`Tender Type Description` %in% selected_tender)
aggregate_boston_data = bostonCont_filtered %>% #aggregate by zip code and tender type
group_by(Zip, Tender = `Tender Type Description`) %>%
summarise(Total_Amount = sum(Amount, na.rm = TRUE), .groups = 'drop') #summarise total contribution amounts
head(aggregate_boston_data) #view first few rows of aggregated data
#reshape data to wide format
wide_boston_data = aggregate_boston_data %>%
pivot_wider(
names_from = Tender,
values_from = Total_Amount,
values_fill = 0
)
head(wide_boston_data) #view first few rows
#merge wide_boston_data with map bostonZips
bostonZips = bostonZips %>%
mutate(Zip = as.character(ZIP5)) #convert ZIP5 to character
boston_merged_data = bostonZips %>% #merge data
left_join(wide_boston_data, by = 'Zip')
boston_merged_data <- boston_merged_data %>% #remove NA values
filter(!is.na(Check) & !is.na(`Credit Card`))
#Step 4: create plot
#customize colors by check and credit card
check_colors = c('Very Low' = '#ffffcc',
'Low' = '#ffeda0',
'Moderate' = '#feb24c',
'High' = '#fd8d3c',
'Very High' = '#f03b20')
credit_colors = c('Very Low' = '#edf8fb',
'Low' = '#b2e2e2',
'Moderate' = '#66c2a4',
'High' = '#2ca25f',
'Very High' = '#006d2c')
#categorize contribution amounts
boston_merged_data = boston_merged_data %>%
mutate(check_cat = cut(Check,
breaks = c(-Inf, 30000, 60000, 90000, 120000, Inf),
labels = c('Very Low (<30,000)',
'Low (30,000-59,999)',
'Moderate (60,000-89,999)',
'High (90,000-119,999)',
'Very High(>=120,000)'
),
right = FALSE),
credit_cat = cut(`Credit Card`,
breaks = c(-Inf, 40000, 70000, 100000, 130000, Inf),
labels = c('Very Low (<40,000)',
'Low(40,000-69,999)',
'Moderate(70,000-99,999)',
'High (100,000-129,999)',
'Very High (>=130,000'
),
right = FALSE)
)
#convert format to factor
boston_merged_data$check_cat <- factor(boston_merged_data$check_cat)
boston_merged_data$credit_cat <- factor(boston_merged_data$credit_cat)
#create base map
base = ggplot() + geom_sf(data = bostonZips, fill = 'gray90', color = 'white')
#add check contribution layers
base +
geom_sf(data = boston_merged_data,
aes(fill = check_cat),
color = NA) +
scale_fill_manual(values = check_colors) +
labs(fill = 'Contribution Category in USD',
title = 'Check Contributions to Political Campaigns in Boston',
subTitle = 'Categorized by Amount',
caption = 'Source: Massachusetts Office of Campaign and Political Finance') +
theme_minimal()
#customize colors by check and credit card
check_colors = c('Very Low (<30,000)' = '#ffffcc',
'Low (30,000-59,999)' = '#ffeda0',
'Moderate (60,000-89,999)' = '#feb24c',
'High (90,000-119,999)' = '#fd8d3c',
'Very High (>=120,000)' = '#f03b20')
credit_colors = c('Very Low (<40,000)' = '#edf8fb',
'Low (40,000-69,999)' = '#b2e2e2',
'Moderate (70,000-99,999)' = '#66c2a4',
'High (100,000-129,999)' = '#2ca25f',
'Very High (>=130,000)' = '#006d2c')
#categorize contribution amounts
boston_merged_data = boston_merged_data %>%
mutate(check_cat = cut(Check,
breaks = c(-Inf, 30000, 60000, 90000, 120000, Inf),
labels = c('Very Low (<30,000)',
'Low (30,000-59,999)',
'Moderate (60,000-89,999)',
'High (90,000-119,999)',
'Very High (>=120,000)'
),
right = FALSE),
credit_cat = cut(`Credit Card`,
breaks = c(-Inf, 40000, 70000, 100000, 130000, Inf),
labels = c('Very Low (<40,000)',
'Low (40,000-69,999)',
'Moderate (70,000-99,999)',
'High (100,000-129,999)',
'Very High (>=130,000)'
),
right = FALSE)
)
#convert format to factor
boston_merged_data$check_cat <- factor(boston_merged_data$check_cat)
boston_merged_data$credit_cat <- factor(boston_merged_data$credit_cat)
#create base map
base = ggplot() + geom_sf(data = bostonZips, fill = 'gray90', color = 'white')
#add check contribution layers
base +
geom_sf(data = boston_merged_data,
aes(fill = check_cat),
color = NA) +
scale_fill_manual(values = check_colors) +
labs(fill = 'Contribution Category in USD',
title = 'Check Contributions to Political Campaigns in Boston',
subTitle = 'Categorized by Amount',
caption = 'Source: Massachusetts Office of Campaign and Political Finance') +
theme_minimal()
#add check contribution layers
base +
geom_sf(data = boston_merged_data,
aes(fill = check_cat),
color = NA) +
scale_fill_manual(values = check_colors) +
labs(fill = 'Category and Amount in USD',
title = 'Check Contributions to Political Campaigns in Boston',
subtitle = 'Categorized by Amount',
caption = 'Source: Massachusetts Office of Campaign and Political Finance') +
theme_minimal()
base +
geom_sf(data = boston_merged_data,
aes(fill = credit_cat),
color = NA) +
scale_fill_manual(values = credit_colors) +
labs(fill = 'Contribution Category (USD)',
title = 'Credit Card Contributions to Political Campaigns in Boston',
subtitle = 'Grouped by Category',
caption = 'Source: Massachusetts Office of Campaign and Political Finance') +
theme_minimal()
base +
geom_sf(data = boston_merged_data,
aes(fill = check_cat),
color = NA) +
scale_fill_manual(values = check_colors) +
labs(fill = 'Contribution Category (USD)',
title = 'Check Contributions to Political Campaigns in Boston',
subtitle = 'Grouped by Category',
caption = 'Source: Massachusetts Office of Campaign and Political Finance') +
theme_minimal() +
theme(
plot.subtitle = element_text(size = 10) #decrease subtitle font size
)
getwd()
setwd(C:\Users\tenzi\OneDrive\Desktop\dacss 690V\Homework-1)
setwd("C:/Users/tenzi/OneDrive/Desktop/dacss 690V/Homework-1")
boston_merged_data$check_cat <- factor(boston_merged_data$check_cat)
boston_merged_data$credit_cat <- factor(boston_merged_data$credit_cat)
#create base map
base = ggplot() + geom_sf(data = bostonZips, fill = 'gray90', color = 'white')
#add check contribution layers
base +
geom_sf(data = boston_merged_data,
aes(fill = check_cat),
color = NA) +
scale_fill_manual(values = check_colors) +
labs(fill = 'Contribution Category (USD)',
title = 'Check Contributions to Political Campaigns in Boston',
subtitle = 'Grouped by Category',
caption = 'Source: Massachusetts Office of Campaign and Political Finance') +
theme_minimal() +
theme(
plot.subtitle = element_text(size = 10) #decrease subtitle font size
)
saveRDS(plot3, file = 'plot3.rds') #save plot as rds file
base = ggplot() + geom_sf(data = bostonZips, fill = 'gray90', color = 'white')
#add check contribution layers
plot3 = base +
geom_sf(data = boston_merged_data,
aes(fill = check_cat),
color = NA) +
scale_fill_manual(values = check_colors) +
labs(fill = 'Contribution Category (USD)',
title = 'Check Contributions to Political Campaigns in Boston',
subtitle = 'Grouped by Category',
caption = 'Source: Massachusetts Office of Campaign and Political Finance') +
theme_minimal() +
theme(
plot.subtitle = element_text(size = 10) #decrease subtitle font size
)
saveRDS(plot3, file = 'plot3.rds') #save plot as rds file
#add credit card contribution layers
plot4 = base +
geom_sf(data = boston_merged_data,
aes(fill = credit_cat),
color = NA) +
scale_fill_manual(values = credit_colors) +
labs(fill = 'Contribution Category (USD)',
title = 'Credit Card Contributions to Political Campaigns in Boston',
subtitle = 'Grouped by Category',
caption = 'Source: Massachusetts Office of Campaign and Political Finance') +
theme_minimal() +
theme(
plot.subtitle = element_text(size = 10)
)
saveRDS(plot4, file = 'plot4.rds') #save plot as rds file
library(flexdashboard) # always
library(ggplot2)
library(scales)
plot2 = readRDS('plot2.rds')
print(plot2)
plot3 = readRDS('plot3.rds')
print(plot3)
plot4 = readRDS('plot4.rds')
print(plot4)
plot3 = readRDS('plot3.rds')
print(plot3)
plot4 = readRDS('plot4.rds')
print(plot4)
plot4 = readRDS('plot4.rds')
print(plot4)
plot3 = readRDS('plot3.rds')
print(plot3)
plot4 = readRDS('plot4.rds')
print(plot4)
library(flexdashboard) # always
library(ggplot2)
library(scales)
plot3 = readRDS('plot3.rds')
print(plot3)
plot4 = readRDS('plot4.rds')
print(plot4)
plot3 = readRDS('plot3.rds')
print(plot3)
plot4 = readRDS('plot4.rds')
print(plot4)
plot3 = readRDS('plot3.rds')
print(plot3)
plot4 = readRDS('plot4.rds')
print(plot4)
plot3 = readRDS('plot3.rds')
print(plot3)
plot4 = readRDS('plot4.rds')
print(plot4)
plot3 = readRDS('plot3.rds')
print(plot3)
### Deliverable 3 Plots <!-- Political Contributions in Boston Choropleths -->
```{r, cache = FALSE, fig.width = 10, fig.height = 6}
# Homework 1 --------------------------------------------------------------
#Step 1: clean the environment
rm(list = ls()) # Remove all objects from memory
#Step 2: load and retrieve data
location = 'https://github.com/DACSS-Visual/tabular_univar_cat/raw/main/data/'
file = 'eduwa.rda'
link = paste0(location,file)
#get the data TABLE from the file in the cloud:
load(file = url(link))
#inspect data
dim(eduwa) #check dimensions
names(eduwa) #check column names
table(eduwa$LocaleType) #check different amount of locale types
#Step 3: filter data by locale type
suburbEduwa = eduwa[eduwa$LocaleType=='Suburb',] #choose suburb locale
suburbEduwa$LocaleSub = droplevels(suburbEduwa$LocaleSub)#drop unused levels
table(suburbEduwa$LocaleSub) #check filtered data
#Step 4: prepare to plot
absoluteT = table(suburbEduwa$LocaleSub, #get absolute values
exclude = 'nothing')
names(absoluteT)[4] = 'Unknown' #label missing values unknown
absoluteT
propT = prop.table(absoluteT) * 100 #make absolute count into percentages
propT
(tableFreq = as.data.frame(absoluteT)) #turn frequency table into data frame
names(tableFreq) = c('LocaleSub', 'Count') #specify column names
tableFreq$Percent = as.vector(propT) #add percentages
tableFreq
LABELS = paste0(round(tableFreq$Percent, 2), '%') #define labels for percentages
#Step 5: plot suburb data
library(ggplot2) #load necessary libraries
library(scales)
base = ggplot(data = tableFreq, #create base plot
aes(x = reorder(LocaleSub, Percent), #horizontal axis label
y = Percent)) + theme_classic() #vertical axis label and simplify theme
plot = base +
geom_bar(stat = 'identity', fill = 'gray', color = 'black') +
labs(
title = 'What is the Distribution of Public Schools in Suburban Areas?',
subtitle = 'Based on Suburb Sizes (Small, Midsize, Large, or Unknown) of Washington State in 2019',
x = NULL, #remove x and y axis labels due to redundancy
y = NULL,
caption = 'Source: US Department of Education. The majority of public schools within suburbs are hosted by large suburbs.'
) +
scale_y_continuous(labels = unit_format(suffix = '%')) + #add percentages
theme(
plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0.5, face = 'bold'), #bold title
plot.subtitle = element_text(hjust = 0.5, vjust = 2), #adjust subtitle
axis.text.x = element_text(angle = 45, hjust = 1), #adjust x axis label angle
axis.title.x = element_text(size = 15), #adjust x axis title size
axis.title.y = element_text(size = 15), #adjust y axis title size
)
newPlot = plot +
geom_text(aes(label = LABELS), vjust = -0.5, size = 4) #make percentage labels higher on plot
print(newPlot)
saveRDS(list(plot = newPlot, labels = LABELS), file = 'newPlot.rds') #save plot as rds file
# Homework 2: Arrest Type-Age Plot --------------------------------------------------------------
#Step 1: clean the environment
rm(list = ls()) # Remove all objects from memory
#Step 2: load and retrieve data
linkMass = "https://github.com/DACSS-Visual/tabular_bivar_catcat/raw/refs/heads/main/data/MSP%20DFS%20Arrests%2019-20Q1.xlsx"
library(rio)
library(dplyr)
library(ggplot2)
library(janitor) #load necessary libraries
arrests = rio::import(linkMass, which = 1)
#Step 3: filter and merge data
sheet_2 = rio::import(linkMass, which = 2, skip = 74) %>% #load sheet 2, skip first 74 rows
clean_names() %>% #standardize names
select(code, arrest_type) #select relevant columns
arrests = arrests %>%
filter(!is.na(`Arrest Type`) & !is.na(Age)) %>% #remove missing values
left_join(sheet_2, by = c('Arrest Type' = 'code')) #join arrest type description with code
head(arrests) #inspect data
summary(arrests)
#Step 4: prepare data
arrest_summary = arrests %>%
group_by(arrest_type, Age) %>% #group by arrest type and age
summarise(count = n(), .groups = 'drop') #count arrests by type and age
arrest_summary$arrest_type = factor(
arrest_summary$arrest_type,
levels = c('Felony', 'Misdemeanor', 'Warrant', 'Other')) #order by arrest type weight
#Step 5: create plot
plot2 = ggplot(arrest_summary, aes(x = Age, y = count, fill = arrest_type)) +
geom_bar(stat = 'identity', color = 'black', fill = 'grey', alpha = 0.7) +
facet_wrap(~arrest_type, scales = 'free_y') + #create facet plot
scale_x_continuous(
breaks = seq(0, max(arrest_summary$Age), by = 10),  #break every 10 years
labels = seq(0, max(arrest_summary$Age), by = 10)   #label every 10 years
) +
labs( #create plot labels
title = 'Young Adults Face Higher Arrest Rates Across Arrest Type Categories in Massachusetts',
subtitle = 'Among younger age groups, Felony and Misdemeanors are more frequent, Warrants have a moderate frequency and Others is less frequent.',
caption = 'Source: Massachusetts State Police from the Field Services and Investigative Divisions from January 2019 to March 2020',
x = 'Age',
y = 'Number of Arrests',
fill = 'Arrest Type'
) +
theme_minimal() + #choose minimal theme
theme(
strip.text = element_text(size = 10, face = 'bold'),
strip.background = element_blank(),
legend.position = 'none',
axis.text.x = element_text(color = 'black'), #resize and recolor x and y axes texts and titles
axis.title.x = element_text(size = 12),
axis.text.y = element_text(color = 'black'),
axis.title.y = element_text(size = 12)
)
saveRDS(plot2, file = 'plot2.rds') #save plot as rds file
# Homework 3: Boston Political Finances Choropleth Map --------------------------------------------------------------
#Step 1: clean the environment
rm(list = ls()) # Remove all objects from memory
#Step 2: load and retrieve data
#load libraries
library(sf)
library(dplyr)
library(tidyr)
library(ggplot2)
#load contribution data
linkBoston = "https://github.com/DACSS-Visual/SpatialData/raw/refs/heads/main/data/BostonContrib.xlsx"
bostonCont = rio::import(linkBoston)
head(bostonCont) #view first few rows
summary(bostonCont$Amount) #inspect summary of Amount variable
tapply(bostonCont$Amount, bostonCont$'Tender Type Description', summary) #inspect Tender Type Description variable
#load zip code data
linkZips = 'https://raw.githubusercontent.com/DACSS-Visual/SpatialData/refs/heads/main/data/zip_codes.json'
bostonZips = sf::read_sf(linkZips)
head(bostonZips) #view first few rows
#Step 3: filter and merge data
selected_tender = c("Check", "Credit Card") #filter contributions by Check and Credit Card
bostonCont_filtered = bostonCont %>%
filter(`Tender Type Description` %in% selected_tender)
aggregate_boston_data = bostonCont_filtered %>% #aggregate by zip code and tender type
group_by(Zip, Tender = `Tender Type Description`) %>%
summarise(Total_Amount = sum(Amount, na.rm = TRUE), .groups = 'drop') #summarise total contribution amounts
head(aggregate_boston_data) #view first few rows of aggregated data
#reshape data to wide format
wide_boston_data = aggregate_boston_data %>%
pivot_wider(
names_from = Tender,
values_from = Total_Amount,
values_fill = 0
)
head(wide_boston_data) #view first few rows
#merge wide_boston_data with map bostonZips
bostonZips = bostonZips %>%
mutate(Zip = as.character(ZIP5)) #convert ZIP5 to character
boston_merged_data = bostonZips %>% #merge data
left_join(wide_boston_data, by = 'Zip')
boston_merged_data <- boston_merged_data %>% #remove NA values
filter(!is.na(Check) & !is.na(`Credit Card`))
#Step 4: create plot
#customize colors by check and credit card
check_colors = c('Very Low (<30,000)' = '#ffffcc',
'Low (30,000-59,999)' = '#ffeda0',
'Moderate (60,000-89,999)' = '#feb24c',
'High (90,000-119,999)' = '#fd8d3c',
'Very High (>=120,000)' = '#f03b20')
credit_colors = c('Very Low (<40,000)' = '#edf8fb',
'Low (40,000-69,999)' = '#b2e2e2',
'Moderate (70,000-99,999)' = '#66c2a4',
'High (100,000-129,999)' = '#2ca25f',
'Very High (>=130,000)' = '#006d2c')
#categorize contribution amounts
boston_merged_data = boston_merged_data %>%
mutate(check_cat = cut(Check,
breaks = c(-Inf, 30000, 60000, 90000, 120000, Inf),
labels = c('Very Low (<30,000)',
'Low (30,000-59,999)',
'Moderate (60,000-89,999)',
'High (90,000-119,999)',
'Very High (>=120,000)'
),
right = FALSE),
credit_cat = cut(`Credit Card`,
breaks = c(-Inf, 40000, 70000, 100000, 130000, Inf),
labels = c('Very Low (<40,000)',
'Low (40,000-69,999)',
'Moderate (70,000-99,999)',
'High (100,000-129,999)',
'Very High (>=130,000)'
),
right = FALSE)
)
#convert format to factor
boston_merged_data$check_cat <- factor(boston_merged_data$check_cat)
boston_merged_data$credit_cat <- factor(boston_merged_data$credit_cat)
#create base map
base = ggplot() + geom_sf(data = bostonZips, fill = 'gray90', color = 'white')
#add check contribution layers
plot3 = base +
geom_sf(data = boston_merged_data,
aes(fill = check_cat),
color = NA) +
scale_fill_manual(values = check_colors) +
labs(fill = 'Contribution Category (USD)',
title = 'Check Contributions to Political Campaigns in Boston',
subtitle = 'Grouped by Category',
caption = 'Source: Massachusetts Office of Campaign and Political Finance') +
theme_minimal() +
theme(
plot.subtitle = element_text(size = 10) #decrease subtitle font size
)
saveRDS(plot3, file = 'plot3.rds') #save plot as rds file
#add credit card contribution layers
plot4 = base +
geom_sf(data = boston_merged_data,
aes(fill = credit_cat),
color = NA) +
scale_fill_manual(values = credit_colors) +
labs(fill = 'Contribution Category (USD)',
title = 'Credit Card Contributions to Political Campaigns in Boston',
subtitle = 'Grouped by Category',
caption = 'Source: Massachusetts Office of Campaign and Political Finance') +
theme_minimal() +
theme(
plot.subtitle = element_text(size = 10)
)
saveRDS(plot4, file = 'plot4.rds') #save plot as rds file
setwd("C:/Users/tenzi/OneDrive/Desktop/dacss 690V/Homework-1")
library(flexdashboard) # always
library(ggplot2)
library(scales)
### Deliverable 3 Plots <!-- Political Contributions in Boston Choropleths -->
```{r, cache = FALSE, fig.width = 10, fig.height = 6}
plot3 = readRDS('plot3.rds')
print(plot3)
plot4 = readRDS('plot4.rds')
print(plot4)
